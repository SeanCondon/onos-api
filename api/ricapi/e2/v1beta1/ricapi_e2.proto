/*
Copyright 2020-present Open Networking Foundation.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

// Package ricapi.e2.v1beta1 defines the interior gRPC interfaces for xApps to interact with E2T.
package ricapi.e2.v1beta1;
option go_package = "github.com/onosproject/onos-api/api/ricapi/e2/v1beta1";

import "ricapi/e2/headers/v1beta1/headers.proto";
import "gogoproto/gogo.proto";

// Indication an indication message
message Indication {
}

// ControlRequest
message ControlRequest {
}

// ControlResponse
message ControlResponse {
}

// E2TService provides means for enhanced interactions with the ONOS RIC E2 Termination service.
service E2TService {
    // Stream opens an indications stream
    rpc Stream (stream StreamRequest) returns (stream StreamResponse);
}

message StreamRequest {
    string app_id = 1 [(gogoproto.casttype) = "AppID", (gogoproto.customname) = "AppID"];
    string instance_id = 2 [(gogoproto.casttype) = "InstanceID", (gogoproto.customname) = "InstanceID"];
    string subscription_id = 3 [(gogoproto.casttype) = "SubscriptionID", (gogoproto.customname) = "SubscriptionID"];
    headers.v1beta1.EncodingType encoding = 4;
}

message StreamResponse {
    headers.v1beta1.ResponseHeader indication_header = 1;
    bytes indication_message = 2;
}
