/*
Copyright 2020-present Open Networking Foundation.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package ricapi.e2.headers.v1beta1;

option go_package = "github.com/onosproject/onos-api/api/ricapi/e2/headers/v1beta1";

message ServiceModelInfo {
    string service_model_id = 1;
}

// RequestHeader a common request header for all requests including encoding type, client/xApp/session info, ordering info, etc
message RequestHeader {
    EncodingType encoding_type = 1;
    ServiceModelInfo service_model_info = 2;

    // TODO more fields should be added

}

// ResponseHeader a common response header for all responses including encoding type, client/xApp/session info, ordering info, etc
message ResponseHeader {
    EncodingType encoding_type = 1;
    ServiceModelInfo service_model_info = 2;
    ResponseStatus response_status = 3;
    bytes indication_header = 4;
    // TODO more fields should be added

}

// EncodingType determines encoding type for the response messages
enum EncodingType {
    PROTO = 0;
    ASN1_PER = 1;
    ASN1_XER = 2;
}

// ResponseStatus
enum ResponseStatus {
    FAILED = 0;
    SUCCEEDED = 1;
}


